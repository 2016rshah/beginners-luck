{"status":"safe","types":{"37":{"13":{"ann":"{v : Coinbase.Exchange.Types.MarketData.Close -> GHC.Types.Double | v == Coinbase.Exchange.Types.MarketData.unClose}","ident":"_","row":37,"col":13},"5":{"ann":"GHC.Types.Double","ident":"close","row":37,"col":5}},"48":{"36":{"ann":"((GHC.Types.Double -> (Data.Functor.Identity.Identity GHC.Types.Double)) -> (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b) -> (Data.Functor.Identity.Identity (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b))) -> GHC.Types.Double -> (Control.Monad.Trans.State.Lazy.StateT (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b) (Control.Monad.Trans.State.Lazy.StateT Graphics.Rendering.Chart.State.CState Data.Functor.Identity.Identity) ())","ident":"_","row":48,"col":36},"18":{"ann":"(GHC.Types.Double -> (Data.Functor.Identity.Identity GHC.Types.Double)) -> (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b) -> (Data.Functor.Identity.Identity (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b))","ident":"lq_anf$##7205759403792929017","row":48,"col":18},"39":{"ann":"{v : GHC.Types.Double | v == 2.0}","ident":"lq_anf$##7205759403792929018","row":48,"col":39}},"61":{"1":{"ann":"Data.Time.Clock.UTC.NominalDiffTime","ident":"Lib.apiDelayDuration","row":61,"col":1},"20":{"ann":"{v : GHC.Integer.Type.Integer | v == 10}","ident":"lq_anf$##7205759403792929034","row":61,"col":20}},"96":{"13":{"ann":"(GHC.Show.Show Lib.SMA)","ident":"Lib.$fShowSMA","row":96,"col":13},"19":{"ann":"(GHC.Classes.Eq Lib.SMA)","ident":"Lib.$fEqSMA","row":96,"col":19},"23":{"ann":"(GHC.Num.Num Lib.SMA)","ident":"Lib.$fNumSMA","row":96,"col":23}},"78":{"22":{"ann":"Coinbase.Exchange.Types.ExchangeConf","ident":"conf","row":78,"col":22},"1":{"ann":"Coinbase.Exchange.Types.ExchangeConf -> Types.NumCandles -> Types.Minutes -> (GHC.Types.IO (Data.Either.Either Coinbase.Exchange.Types.ExchangeFailure [Coinbase.Exchange.Types.MarketData.Candle]))","ident":"Lib.getMostRecentCandles","row":78,"col":1},"27":{"ann":"Types.NumCandles","ident":"numCandles","row":78,"col":27},"38":{"ann":"Types.Minutes","ident":"candleIntervalMinutes","row":78,"col":38}},"43":{"35":{"ann":"((GHC.Types.Bool -> (Data.Functor.Identity.Identity GHC.Types.Bool)) -> (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b) -> (Data.Functor.Identity.Identity (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b))) -> GHC.Types.Bool -> (Control.Monad.Trans.State.Lazy.StateT (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b) (Control.Monad.Trans.State.Lazy.StateT Graphics.Rendering.Chart.State.CState Data.Functor.Identity.Identity) ())","ident":"_","row":43,"col":35},"18":{"ann":"(GHC.Types.Bool -> (Data.Functor.Identity.Identity GHC.Types.Bool)) -> (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b) -> (Data.Functor.Identity.Identity (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b))","ident":"lq_anf$##7205759403792928995","row":43,"col":18}},"82":{"3":{"ann":"(Coinbase.Exchange.Types.ExchangeT GHC.Types.IO [Coinbase.Exchange.Types.MarketData.Candle]) -> (GHC.Types.IO (Data.Either.Either Coinbase.Exchange.Types.ExchangeFailure [Coinbase.Exchange.Types.MarketData.Candle]))","ident":"_","row":82,"col":3},"21":{"ann":"Coinbase.Exchange.Types.Core.ProductId -> (GHC.Base.Maybe Data.Time.Clock.UTC.UTCTime) -> (GHC.Base.Maybe Data.Time.Clock.UTC.UTCTime) -> (GHC.Base.Maybe GHC.Types.Int) -> (Coinbase.Exchange.Types.ExchangeT GHC.Types.IO [Coinbase.Exchange.Types.MarketData.Candle])","ident":"_","row":82,"col":21}},"36":{"12":{"ann":"{v : Coinbase.Exchange.Types.MarketData.Open -> GHC.Types.Double | v == Coinbase.Exchange.Types.MarketData.unOpen}","ident":"_","row":36,"col":12},"5":{"ann":"GHC.Types.Double","ident":"open","row":36,"col":5}},"49":{"37":{"ann":"(([(Graphics.Rendering.Chart.Plot.Candle.Candle a b)] -> (Data.Functor.Identity.Identity [(Graphics.Rendering.Chart.Plot.Candle.Candle a b)])) -> (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b) -> (Data.Functor.Identity.Identity (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b))) -> [(Graphics.Rendering.Chart.Plot.Candle.Candle a b)] -> (Control.Monad.Trans.State.Lazy.StateT (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b) (Control.Monad.Trans.State.Lazy.StateT Graphics.Rendering.Chart.State.CState Data.Functor.Identity.Identity) ())","ident":"_","row":49,"col":37},"18":{"ann":"([(Graphics.Rendering.Chart.Plot.Candle.Candle a b)] -> (Data.Functor.Identity.Identity [(Graphics.Rendering.Chart.Plot.Candle.Candle a b)])) -> (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b) -> (Data.Functor.Identity.Identity (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b))","ident":"lq_anf$##7205759403792929020","row":49,"col":18}},"101":{"73":{"ann":"GHC.Types.Double -> (GHC.Real.Ratio GHC.Integer.Type.Integer)","ident":"_","row":101,"col":73},"85":{"ann":"{v : Coinbase.Exchange.Types.MarketData.Close -> GHC.Types.Double | v == Coinbase.Exchange.Types.MarketData.unClose}","ident":"_","row":101,"col":85},"1":{"ann":"Coinbase.Exchange.Types.MarketData.Candle -> (GHC.Real.Ratio GHC.Integer.Type.Integer)","ident":"Lib.getClosePrice","row":101,"col":1}},"44":{"49":{"ann":"{v : (Data.Colour.Internal.AlphaColour GHC.Types.Double) -> Graphics.Rendering.Chart.Backend.Types.FillStyle | v == Graphics.Rendering.Chart.Drawing.solidFillStyle}","ident":"_","row":44,"col":49},"72":{"ann":"(Data.Colour.Internal.Colour GHC.Types.Double)","ident":"lq_anf$##7205759403792928998","row":44,"col":72},"18":{"ann":"(Graphics.Rendering.Chart.Backend.Types.FillStyle -> (Data.Functor.Identity.Identity Graphics.Rendering.Chart.Backend.Types.FillStyle)) -> (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b) -> (Data.Functor.Identity.Identity (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b))","ident":"lq_anf$##7205759403792928997","row":44,"col":18},"46":{"ann":"((Graphics.Rendering.Chart.Backend.Types.FillStyle -> (Data.Functor.Identity.Identity Graphics.Rendering.Chart.Backend.Types.FillStyle)) -> (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b) -> (Data.Functor.Identity.Identity (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b))) -> Graphics.Rendering.Chart.Backend.Types.FillStyle -> (Control.Monad.Trans.State.Lazy.StateT (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b) (Control.Monad.Trans.State.Lazy.StateT Graphics.Rendering.Chart.State.CState Data.Functor.Identity.Identity) ())","ident":"_","row":44,"col":46},"65":{"ann":"(Data.Colour.Internal.Colour GHC.Types.Double) -> (Data.Colour.Internal.AlphaColour GHC.Types.Double)","ident":"_","row":44,"col":65}},"66":{"1":{"ann":"Types.NumCandles -> Types.Minutes -> (GHC.Types.Int, GHC.Types.Int)","ident":"Lib.getCandleRequestParams","row":66,"col":1}},"29":{"1":{"ann":"Coinbase.Exchange.Types.MarketData.Candle -> (Graphics.Rendering.Chart.Plot.Candle.Candle Data.Time.LocalTime.LocalTime.LocalTime GHC.Types.Double)","ident":"Lib.toChartCandle","row":29,"col":1}},"56":{"3":{"ann":"Graphics.Rendering.Chart.Backend.Diagrams.FileOptions -> [GHC.Types.Char] -> (Control.Monad.Trans.State.Lazy.StateT (Graphics.Rendering.Chart.Layout.Layout Data.Time.LocalTime.LocalTime.LocalTime GHC.Types.Double) (Control.Monad.Trans.State.Lazy.StateT Graphics.Rendering.Chart.State.CState Data.Functor.Identity.Identity) ()) -> (GHC.Types.IO ())","ident":"_","row":56,"col":3},"10":{"ann":"Graphics.Rendering.Chart.Backend.Diagrams.FileOptions","ident":"lq_anf$##7205759403792929033","row":56,"col":10}},"30":{"28":{"ann":"{v : GHC.Types.Double | v == open + close}","ident":"lq_anf$##7205759403792929029","row":30,"col":28},"44":{"ann":"{v : GHC.Types.Double | v == 2.0}","ident":"lq_anf$##7205759403792929030","row":30,"col":44},"27":{"ann":"GHC.Types.Double","ident":"lq_anf$##7205759403792929031","row":30,"col":27},"33":{"ann":"x1:GHC.Types.Double -> x2:GHC.Types.Double -> {v : GHC.Types.Double | v == x1 + x2}","ident":"_","row":30,"col":33},"3":{"ann":"GHC.Types.Double -> GHC.Types.Double -> GHC.Types.Double -> GHC.Types.Double -> GHC.Types.Double -> (Graphics.Rendering.Chart.Plot.Candle.Candle Data.Time.LocalTime.LocalTime.LocalTime GHC.Types.Double)","ident":"_","row":30,"col":3},"42":{"ann":"x1:GHC.Types.Double -> x2:{v : GHC.Types.Double | v /= 0\n                                                  && v /= 0.0} -> {v : GHC.Types.Double | v == x1 / x2\n                                                                                          && v == x1 / x2}","ident":"_","row":30,"col":42}},"53":{"25":{"ann":"[Coinbase.Exchange.Types.MarketData.Candle]","ident":"candles","row":53,"col":25},"1":{"ann":"[GHC.Types.Char] -> [Coinbase.Exchange.Types.MarketData.Candle] -> (GHC.Types.IO ())","ident":"Lib.displayCandles","row":53,"col":1},"16":{"ann":"[GHC.Types.Char]","ident":"fileName","row":53,"col":16}},"35":{"5":{"ann":"GHC.Types.Double","ident":"low","row":35,"col":5},"11":{"ann":"{v : Coinbase.Exchange.Types.MarketData.Low -> GHC.Types.Double | v == Coinbase.Exchange.Types.MarketData.unLow}","ident":"_","row":35,"col":11}},"45":{"49":{"ann":"{v : (Data.Colour.Internal.AlphaColour GHC.Types.Double) -> Graphics.Rendering.Chart.Backend.Types.FillStyle | v == Graphics.Rendering.Chart.Drawing.solidFillStyle}","ident":"_","row":45,"col":49},"72":{"ann":"(Data.Colour.Internal.Colour GHC.Types.Double)","ident":"lq_anf$##7205759403792929003","row":45,"col":72},"18":{"ann":"(Graphics.Rendering.Chart.Backend.Types.FillStyle -> (Data.Functor.Identity.Identity Graphics.Rendering.Chart.Backend.Types.FillStyle)) -> (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b) -> (Data.Functor.Identity.Identity (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b))","ident":"lq_anf$##7205759403792929002","row":45,"col":18},"46":{"ann":"((Graphics.Rendering.Chart.Backend.Types.FillStyle -> (Data.Functor.Identity.Identity Graphics.Rendering.Chart.Backend.Types.FillStyle)) -> (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b) -> (Data.Functor.Identity.Identity (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b))) -> Graphics.Rendering.Chart.Backend.Types.FillStyle -> (Control.Monad.Trans.State.Lazy.StateT (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b) (Control.Monad.Trans.State.Lazy.StateT Graphics.Rendering.Chart.State.CState Data.Functor.Identity.Identity) ())","ident":"_","row":45,"col":46},"65":{"ann":"(Data.Colour.Internal.Colour GHC.Types.Double) -> (Data.Colour.Internal.AlphaColour GHC.Types.Double)","ident":"_","row":45,"col":65}},"67":{"16":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 * x2}","ident":"_","row":67,"col":16},"5":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792929038","row":67,"col":5}},"89":{"78":{"ann":"x1:(GHC.Real.Ratio GHC.Integer.Type.Integer) -> x2:(GHC.Real.Ratio GHC.Integer.Type.Integer) -> {v : (GHC.Real.Ratio GHC.Integer.Type.Integer) | v == x1 * x2}","ident":"_","row":89,"col":78},"19":{"ann":"[Coinbase.Exchange.Types.MarketData.Candle]","ident":"candles","row":89,"col":19},"91":{"ann":"x1:(GHC.Real.Ratio GHC.Integer.Type.Integer) -> x2:(GHC.Real.Ratio GHC.Integer.Type.Integer) -> {v : (GHC.Real.Ratio GHC.Integer.Type.Integer) | v == x1 + x2}","ident":"_","row":89,"col":91},"45":{"ann":"(GHC.Real.Ratio GHC.Integer.Type.Integer)","ident":"lq_anf$##7205759403792929087","row":89,"col":45},"67":{"ann":"x1:(GHC.Real.Ratio GHC.Integer.Type.Integer) -> x2:(GHC.Real.Ratio GHC.Integer.Type.Integer) -> {v : (GHC.Real.Ratio GHC.Integer.Type.Integer) | v == x1 - x2}","ident":"_","row":89,"col":67},"1":{"ann":"Lib.EMA -> [Coinbase.Exchange.Types.MarketData.Candle] -> Lib.EMA","ident":"Lib.ema","row":89,"col":1},"40":{"ann":"{v : (GHC.Real.Ratio GHC.Integer.Type.Integer) -> Lib.EMA | v == Lib.EMA}","ident":"_","row":89,"col":40},"46":{"ann":"{v : Coinbase.Exchange.Types.MarketData.Candle -> (GHC.Real.Ratio GHC.Integer.Type.Integer) | v == Lib.getClosePrice}","ident":"_","row":89,"col":46}},"1":{"1":{"ann":"GHC.Types.Module","ident":"Lib.$trModule","row":1,"col":1}},"105":{"15":{"ann":"{v : (GHC.Real.Ratio GHC.Integer.Type.Integer) -> Lib.SMA | v == Lib.SMA}","ident":"_","row":105,"col":15},"37":{"ann":"x1:(GHC.Real.Ratio GHC.Integer.Type.Integer) -> x2:{v : (GHC.Real.Ratio GHC.Integer.Type.Integer) | v /= 0\n                                                                                                    && v /= 0.0} -> {v : (GHC.Real.Ratio GHC.Integer.Type.Integer) | v == x1 / x2\n                                                                                                                                                                     && v == x1 / x2}","ident":"_","row":105,"col":37},"20":{"ann":"{v : [Coinbase.Exchange.Types.MarketData.Candle] -> (GHC.Real.Ratio GHC.Integer.Type.Integer) | v == totalSum}","ident":"_","row":105,"col":20},"39":{"ann":"(GHC.Real.Ratio GHC.Integer.Type.Integer)","ident":"lq_anf$##7205759403792929069","row":105,"col":39}},"69":{"18":{"ann":"{v : GHC.Types.Int | v == 60}","ident":"lq_anf$##7205759403792929036","row":69,"col":18},"40":{"ann":"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 * x2}","ident":"_","row":69,"col":40},"5":{"ann":"GHC.Types.Int","ident":"numSeconds","row":69,"col":5}},"46":{"57":{"ann":"(Data.Colour.Internal.Colour GHC.Types.Double) -> (Data.Colour.Internal.AlphaColour GHC.Types.Double)","ident":"_","row":46,"col":57},"44":{"ann":"{v : GHC.Types.Double -> (Data.Colour.Internal.AlphaColour GHC.Types.Double) -> [GHC.Types.Double] -> Graphics.Rendering.Chart.Backend.Types.LineCap -> Graphics.Rendering.Chart.Backend.Types.LineJoin -> Graphics.Rendering.Chart.Backend.Types.LineStyle | v == Graphics.Rendering.Chart.Backend.Types.LineStyle}","ident":"_","row":46,"col":44},"18":{"ann":"(Graphics.Rendering.Chart.Backend.Types.LineStyle -> (Data.Functor.Identity.Identity Graphics.Rendering.Chart.Backend.Types.LineStyle)) -> (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b) -> (Data.Functor.Identity.Identity (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b))","ident":"lq_anf$##7205759403792929007","row":46,"col":18},"64":{"ann":"(Data.Colour.Internal.Colour GHC.Types.Double)","ident":"lq_anf$##7205759403792929009","row":46,"col":64},"41":{"ann":"((Graphics.Rendering.Chart.Backend.Types.LineStyle -> (Data.Functor.Identity.Identity Graphics.Rendering.Chart.Backend.Types.LineStyle)) -> (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b) -> (Data.Functor.Identity.Identity (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b))) -> Graphics.Rendering.Chart.Backend.Types.LineStyle -> (Control.Monad.Trans.State.Lazy.StateT (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b) (Control.Monad.Trans.State.Lazy.StateT Graphics.Rendering.Chart.State.CState Data.Functor.Identity.Identity) ())","ident":"_","row":46,"col":41},"54":{"ann":"{v : GHC.Types.Double | v == 1.0}","ident":"lq_anf$##7205759403792929008","row":46,"col":54}},"104":{"14":{"ann":"(GHC.Real.Ratio GHC.Integer.Type.Integer)","ident":"lq_anf$##7205759403792929072","row":104,"col":14},"1":{"ann":"[Coinbase.Exchange.Types.MarketData.Candle] -> Lib.SMA","ident":"Lib.sma","row":104,"col":1},"10":{"ann":"{v : (GHC.Real.Ratio GHC.Integer.Type.Integer) -> Lib.SMA | v == Lib.SMA}","ident":"_","row":104,"col":10}},"80":{"15":{"ann":"{v : Data.Time.Clock.UTC.NominalDiffTime -> Data.Time.Clock.UTC.UTCTime -> Data.Time.Clock.UTC.UTCTime | v == Data.Time.Clock.UTCDiff.addUTCTime}","ident":"_","row":80,"col":15},"14":{"ann":"(GHC.Types.IO Data.Time.Clock.UTC.UTCTime)","ident":"_","row":80,"col":14},"27":{"ann":"{v : Data.Time.Clock.UTC.NominalDiffTime | v == (-Lib.apiDelayDuration)}","ident":"lq_anf$##7205759403792929039","row":80,"col":27},"47":{"ann":"(Data.Time.Clock.UTC.UTCTime -> Data.Time.Clock.UTC.UTCTime) -> (GHC.Types.IO Data.Time.Clock.UTC.UTCTime) -> (GHC.Types.IO Data.Time.Clock.UTC.UTCTime)","ident":"_","row":80,"col":47},"3":{"ann":"Data.Time.Clock.UTC.UTCTime","ident":"endTime","row":80,"col":3}},"55":{"7":{"ann":"(Control.Monad.Trans.State.Lazy.StateT (Graphics.Rendering.Chart.Layout.Layout Data.Time.LocalTime.LocalTime.LocalTime GHC.Types.Double) (Control.Monad.Trans.State.Lazy.StateT Graphics.Rendering.Chart.State.CState Data.Functor.Identity.Identity) ())","ident":"renderedPlot","row":55,"col":7},"28":{"ann":"(Control.Monad.Trans.State.Lazy.StateT (Graphics.Rendering.Chart.Layout.Layout Data.Time.LocalTime.LocalTime.LocalTime GHC.Types.Double) (Control.Monad.Trans.State.Lazy.StateT Graphics.Rendering.Chart.State.CState Data.Functor.Identity.Identity) (Graphics.Rendering.Chart.Plot.Candle.PlotCandle Data.Time.LocalTime.LocalTime.LocalTime GHC.Types.Double))","ident":"lq_anf$##7205759403792929032","row":55,"col":28},"22":{"ann":"(Control.Monad.Trans.State.Lazy.StateT (Graphics.Rendering.Chart.Layout.Layout Data.Time.LocalTime.LocalTime.LocalTime GHC.Types.Double) (Control.Monad.Trans.State.Lazy.StateT Graphics.Rendering.Chart.State.CState Data.Functor.Identity.Identity) (Graphics.Rendering.Chart.Plot.Candle.PlotCandle Data.Time.LocalTime.LocalTime.LocalTime GHC.Types.Double)) -> (Control.Monad.Trans.State.Lazy.StateT (Graphics.Rendering.Chart.Layout.Layout Data.Time.LocalTime.LocalTime.LocalTime GHC.Types.Double) (Control.Monad.Trans.State.Lazy.StateT Graphics.Rendering.Chart.State.CState Data.Functor.Identity.Identity) ())","ident":"_","row":55,"col":22}},"33":{"12":{"ann":"{v : Data.Time.LocalTime.TimeZone.TimeZone -> Data.Time.Clock.UTC.UTCTime -> Data.Time.LocalTime.LocalTime.LocalTime | v == Data.Time.LocalTime.LocalTime.utcToLocalTime}","ident":"_","row":33,"col":12},"5":{"ann":"Data.Time.LocalTime.LocalTime.LocalTime","ident":"time","row":33,"col":5}},"38":{"12":{"ann":"{v : Coinbase.Exchange.Types.MarketData.High -> GHC.Types.Double | v == Coinbase.Exchange.Types.MarketData.unHigh}","ident":"_","row":38,"col":12},"5":{"ann":"GHC.Types.Double","ident":"high","row":38,"col":5}},"47":{"45":{"ann":"{v : GHC.Types.Double | v == 0.0}","ident":"lq_anf$##7205759403792929015","row":47,"col":45},"18":{"ann":"(GHC.Types.Double -> (Data.Functor.Identity.Identity GHC.Types.Double)) -> (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b) -> (Data.Functor.Identity.Identity (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b))","ident":"lq_anf$##7205759403792929014","row":47,"col":18},"42":{"ann":"((GHC.Types.Double -> (Data.Functor.Identity.Identity GHC.Types.Double)) -> (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b) -> (Data.Functor.Identity.Identity (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b))) -> GHC.Types.Double -> (Control.Monad.Trans.State.Lazy.StateT (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b) (Control.Monad.Trans.State.Lazy.StateT Graphics.Rendering.Chart.State.CState Data.Functor.Identity.Identity) ())","ident":"_","row":47,"col":42}},"92":{"48":{"ann":"xs:[Coinbase.Exchange.Types.MarketData.Candle] -> {v : GHC.Types.Int | v >= 0\n                                                                       && v == len xs}","ident":"_","row":92,"col":48},"36":{"ann":"GHC.Types.Int -> (GHC.Real.Ratio GHC.Integer.Type.Integer)","ident":"_","row":92,"col":36},"19":{"ann":"GHC.Integer.Type.Integer -> (GHC.Real.Ratio GHC.Integer.Type.Integer)","ident":"_","row":92,"col":19},"66":{"ann":"(GHC.Real.Ratio GHC.Integer.Type.Integer)","ident":"lq_anf$##7205759403792929082","row":92,"col":66},"64":{"ann":"x1:(GHC.Real.Ratio GHC.Integer.Type.Integer) -> x2:(GHC.Real.Ratio GHC.Integer.Type.Integer) -> {v : (GHC.Real.Ratio GHC.Integer.Type.Integer) | v == x1 + x2}","ident":"_","row":92,"col":64},"5":{"ann":"(GHC.Real.Ratio GHC.Integer.Type.Integer)","ident":"multiplier","row":92,"col":5},"33":{"ann":"x1:(GHC.Real.Ratio GHC.Integer.Type.Integer) -> x2:{v : (GHC.Real.Ratio GHC.Integer.Type.Integer) | v /= 0\n                                                                                                    && v /= 0.0} -> {v : (GHC.Real.Ratio GHC.Integer.Type.Integer) | v == x1 / x2\n                                                                                                                                                                     && v == x1 / x2}","ident":"_","row":92,"col":33}},"79":{"35":{"ann":"{v : Types.NumCandles -> Types.Minutes -> (GHC.Types.Int, GHC.Types.Int) | v == Lib.getCandleRequestParams}","ident":"_","row":79,"col":35},"20":{"ann":"GHC.Types.Int","ident":"granularity","row":79,"col":20},"8":{"ann":"GHC.Types.Int","ident":"timeWindow","row":79,"col":8}},"42":{"14":{"ann":"[(Graphics.Rendering.Chart.Plot.Candle.Candle a b)]","ident":"cs","row":42,"col":14},"19":{"ann":"(Control.Monad.Trans.State.Lazy.StateT (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b) (Control.Monad.Trans.State.Lazy.StateT Graphics.Rendering.Chart.State.CState Data.Functor.Identity.Identity) ()) -> (Control.Monad.Trans.State.Lazy.StateT c (Control.Monad.Trans.State.Lazy.StateT Graphics.Rendering.Chart.State.CState Data.Functor.Identity.Identity) (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b))","ident":"lq_anf$##7205759403792928994","row":42,"col":19},"1":{"ann":"[(Graphics.Rendering.Chart.Plot.Candle.Candle a b)] -> (Control.Monad.Trans.State.Lazy.StateT c (Control.Monad.Trans.State.Lazy.StateT Graphics.Rendering.Chart.State.CState Data.Functor.Identity.Identity) (Graphics.Rendering.Chart.Plot.Candle.PlotCandle a b))","ident":"Lib.mkCandlePlot","row":42,"col":1}},"107":{"17":{"ann":"[(GHC.Real.Ratio GHC.Integer.Type.Integer)] -> (GHC.Real.Ratio GHC.Integer.Type.Integer)","ident":"lq_anf$##7205759403792929066","row":107,"col":17},"23":{"ann":"x1:[Coinbase.Exchange.Types.MarketData.Candle] -> {v : [(GHC.Real.Ratio GHC.Integer.Type.Integer)] | len v == len x1}","ident":"lq_anf$##7205759403792929067","row":107,"col":23},"5":{"ann":"[Coinbase.Exchange.Types.MarketData.Candle] -> (GHC.Real.Ratio GHC.Integer.Type.Integer)","ident":"totalSum","row":107,"col":5},"27":{"ann":"{v : Coinbase.Exchange.Types.MarketData.Candle -> (GHC.Real.Ratio GHC.Integer.Type.Integer) | v == Lib.getClosePrice}","ident":"Lib.getClosePrice","row":107,"col":27}},"54":{"7":{"ann":"{v : [(Graphics.Rendering.Chart.Plot.Candle.Candle Data.Time.LocalTime.LocalTime.LocalTime GHC.Types.Double)] | len v == len candles}","ident":"plotPoints","row":54,"col":7},"20":{"ann":"x1:[Coinbase.Exchange.Types.MarketData.Candle] -> {v : [(Graphics.Rendering.Chart.Plot.Candle.Candle Data.Time.LocalTime.LocalTime.LocalTime GHC.Types.Double)] | len v == len x1}","ident":"_","row":54,"col":20},"24":{"ann":"{v : Coinbase.Exchange.Types.MarketData.Candle -> (Graphics.Rendering.Chart.Plot.Candle.Candle Data.Time.LocalTime.LocalTime.LocalTime GHC.Types.Double) | v == Lib.toChartCandle}","ident":"Lib.toChartCandle","row":54,"col":24}},"98":{"13":{"ann":"(GHC.Show.Show Lib.EMA)","ident":"Lib.$fShowEMA","row":98,"col":13},"19":{"ann":"(GHC.Classes.Eq Lib.EMA)","ident":"Lib.$fEqEMA","row":98,"col":19},"23":{"ann":"(GHC.Num.Num Lib.EMA)","ident":"Lib.$fNumEMA","row":98,"col":23}},"81":{"7":{"ann":"Data.Time.Clock.UTC.UTCTime","ident":"startTime","row":81,"col":7},"43":{"ann":"{v : GHC.Types.Int | v == (-timeWindow)}","ident":"lq_anf$##7205759403792929041","row":81,"col":43},"31":{"ann":"GHC.Types.Int -> Data.Time.Clock.UTC.NominalDiffTime","ident":"_","row":81,"col":31},"19":{"ann":"{v : Data.Time.Clock.UTC.NominalDiffTime -> Data.Time.Clock.UTC.UTCTime -> Data.Time.Clock.UTC.UTCTime | v == Data.Time.Clock.UTCDiff.addUTCTime}","ident":"_","row":81,"col":19}},"108":{"19":{"ann":"x1:GHC.Types.Int -> {v : (GHC.Real.Ratio GHC.Integer.Type.Integer) | v == x1}","ident":"lq_anf$##7205759403792929064","row":108,"col":19},"34":{"ann":"xs:[a] -> {v : GHC.Types.Int | v >= 0\n                               && v == len xs}","ident":"_","row":108,"col":34},"5":{"ann":"[a] -> (GHC.Real.Ratio GHC.Integer.Type.Integer)","ident":"numCandles","row":108,"col":5}}},"errors":[]}